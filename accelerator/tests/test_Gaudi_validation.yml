# Copyright 2024 Intel Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Validating for Nodes having GPU

- name: Validating the Gaudi Driver installation on nodes having GPU
  hosts: GPU_node
  vars_files: 'test_vars/test_Gaudi_vars.yml'
  tasks:
  - name: Validate the Gaudi Driver Version
    tags: TC_001
    block:
    - name: Getting the version
      ansible.builtin.command: hl-smi -v
      register: gaudi_installed_version
      changed_when: false
    - name: Checking Version
      ansible.builtin.assert:
        that:
          - "Gaudi_Default_version in gaudi_installed_version.stdout"
        success_msg: "{{ version_pass }}"
        fail_msg: "{{ version_fail }}"

  - name: Validate Gaudi TPC Compiling
    tags: TC_002
    block:
    - name: Create test folder
      ansible.builtin.tempfile:
        state: directory
        suffix: omnia_gaudi_test
      register: test_folder

    - name: Copy files
      copy: 
        src: "{{ playbook_dir }}/files/{{ Gaudi_verify_code }}"
        dest: "{{ test_folder.path }}/{{ Gaudi_verify_code }}"

    - name: Compiling TPC Code
      ansible.builtin.command: tpc-clang "{{ Gaudi_verify_code }}" -c -x c++
      args:
        chdir: "{{ test_folder.path }}"
      register: gaudi_verify
      changed_when: false

    - name: Verify Gaudi Driver Installation Successful
      ansible.builtin.assert:
        that:
          - "gaudi_verify.rc == 0"
        success_msg: "{{ installation_pass }}"
        fail_msg: "{{ installation_fail }}"
    
    always:
    - name: Remove test files
      ansible.builtin.file:
        path: "{{ test_folder.path }}"
        state: absent
  
# Validating for Nodes with NO GPU

- name: Validating the Gaudi Driver installation on nodes without GPU
  tags: TC_003, TC_004
  hosts: no_GPU_node
  vars_files: 'test_vars/test_Gaudi_vars.yml'
  tasks:
  - name: Validate Gaudi Driver Version
    block:
    - name: Getting the version
      ansible.builtin.command: hl-smi -v
      register: gaudi_installed_version
      changed_when: false
      ignore_errors: true

    - name: Verify Gaudi Driver Installation is not successful
      ansible.builtin.assert:
        that:
          - "gaudi_installed_version.rc != 0"
        success_msg: "{{ Not_installed_pass }}"
        fail_msg: "{{ Not_installed_fail }}"

# Verify Gaudi Driver toolkit is not installed on login_node if login_node_required is false.

- name: Validating Gaudi Driver
  tags: TC_005
  hosts: login_node
  vars_files: 'test_vars/test_Gaudi_vars.yml'
  tasks:
  - name: Validating Gaudi Driver
    block:
    - name: Execute Command
      ansible.builtin.command: tpc-clang -v
      register: gaudi_verify
      changed_when: false
      ignore_errors: true

    - name: Verify Gaudi driver not installed
      ansible.builtin.assert:
        that:
          - "gaudi_verify.rc != 0"
        success_msg: "{{ Not_installed_pass }}"
        fail_msg: "{{ Not_installed_fail }}"

- name: Validating Gaudi Driver
  tags: TC_006
  hosts: manager, compute, nfs_node
  vars_files: 'test_vars/test_Gaudi_vars.yml'
  tasks:
  - name: Validate Gaudi TPC Compiling
    block:
    - name: Create test folder
      ansible.builtin.tempfile:
        state: directory
        suffix: omnia_gaudi_test
      register: test_folder

    - name: Copy files
      copy: 
        src: "{{ playbook_dir }}/files/{{ Gaudi_verify_code }}"
        dest: "{{ test_folder.path }}/{{ Gaudi_verify_code }}"

    - name: Compiling TPC Code
      ansible.builtin.command: tpc-clang "{{ Gaudi_verify_code }}" -c -x c++
      args:
        chdir: "{{ test_folder.path }}"
      register: gaudi_verify
      changed_when: false

    - name: Verify Gaudi Driver Installation Successful
      ansible.builtin.assert:
        that:
          - "gaudi_verify.rc == 0"
        success_msg: "{{ installation_pass }}"
        fail_msg: "{{ installation_fail }}"
    
    always:
    - name: Remove test files
      ansible.builtin.file:
        path: "{{ test_folder.path }}"
        state: absent
