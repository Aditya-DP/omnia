# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Restructure Appstream and BaseOS folder
- name: Execute python script
  ansible.builtin.command: python3.8 "{{ role_path }}/files/restructure_rpms_folder.py" {{ item }}
  changed_when: false
  with_items:
    - "{{ rhel_repo_folder_path }}/AppStream/Packages"
    - "{{ rhel_repo_folder_path }}/BaseOS/Packages"

# Reposync of AppStream and BaseOS
- name: Initiate reposync of AppStream, BaseOS (This might take 20-25 mins)
  ansible.builtin.command: "reposync -p {{ rhel_repo_folder_path }}/{{ item.0 }} --download-metadata --repo={{ item.1 }} -a x86_64,noarch --norepopath -n"
  changed_when: false
  retries: "{{ retry_count }}"
  register: result
  until: result.rc == 0
  with_together:
    - ['AppStream', 'BaseOS']
    - ['rhel-8-for-x86_64-appstream-rpms', 'rhel-8-for-x86_64-baseos-rpms']

- name: Create folder for CodeReadyBuilder
  ansible.builtin.file:
    path: "{{ codereadybuilder_path }}"
    state: directory
    mode: "{{ directory_permissions }}"

- name: Initiate reposync of CodeReadyBuilder (This might take 10 mins)
  ansible.builtin.command: "reposync -p {{ codereadybuilder_path }} --download-metadata --repo={{ codeready_repo_name }} -a x86_64,noarch --norepopath -n"
  changed_when: false
  retries: "{{ retry_count }}"
  register: result
  until: result.rc == 0

# Modify xcat osimage

- name: Create and update codereadybuilder repo
  block:
    - name: Fetch xcat osimage name for provision_os
      ansible.builtin.shell: >
        set -o pipefail && \
        lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}" | grep "{{ provision_os_version }}"
      changed_when: false
      register: fetch_osimage
      failed_when: false

    - name: Set provision_os_image
      ansible.builtin.set_fact:
        provision_os_image: "{{ fetch_osimage.stdout.split(' ')[0] }}"
      when: fetch_osimage.rc == 0

    - name: Retry fetching xcat osimage name for provision_os
      ansible.builtin.shell: >
        set -o pipefail && \
        lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}"
      changed_when: false
      register: retry_fetch_osimage
      when: fetch_osimage.rc != 0

    - name: Set provision_os_image
      ansible.builtin.set_fact:
        provision_os_image: "{{ retry_fetch_osimage.stdout.split(' ')[0] }}"
      when: fetch_osimage.rc != 0

    - name: Configure CodeReadyBuilder repo to osimage
      ansible.builtin.command: chdef -t osimage -o {{ provision_os_image }} -p pkgdir={{ codereadybuilder_path }}
      changed_when: true
  environment:
    XCATROOT: "{{ xcat_root_env }}"
    PATH: "{{ ansible_env.PATH }}:{{ xcat_path_env }}"
    MANPATH: "{{ xcat_manpath_env }}"
    PERL_BADLANG: "{{ perl_badlang_env }}"
