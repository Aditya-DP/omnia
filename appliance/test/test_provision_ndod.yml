#  Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# OMNIA_DIO_US_NDOD_TC_013
# Execute provison role in management station and  PXE boot one compute node 
- name: OMNIA_DIO_US_NDOD_TC_013
  hosts: localhost
  connection: local
  gather_subset:
    - 'min'
  vars_files:
    - test_vars/test_provision_vars.yml
  tasks:
    - name: Set ip address of the compute node
      set_fact:
        single_node_ip_address: "{{ groups[cobbler_groupname][0] }}"
      tags: TC_013

    - name: Delete inventory if exists
      file:
        path: inventory
        state: absent
      tags: TC_013

    - name: Create inventory file
      lineinfile:
        path: inventory
        line: "{{ single_node_ip_address }} ansible_user=root ansible_password={{ boundary_password }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
        create: yes
        mode: '{{ file_permission }}'
      tags: TC_013

    - meta: refresh_inventory
      tags: TC_013

    - name: Validate authentication of username and password
      command: ansible {{ single_node_ip_address }} -m ping -i inventory
      register: validate_login
      changed_when: false
      ignore_errors: yes
      tags: TC_013

    - name: Validate the authentication output
      assert:
        that:
          - "'pong' in validate_login.stdout"
          - "'SUCCESS' in validate_login.stdout"
          - "'UNREACHABLE' not in validate_login.stdout"
        fail_msg: "{{ authentication_fail_msg }}"
        success_msg: "{{ authentication_success_msg }}"
      tags: TC_013

    - name: Check hostname
      command: ansible {{ single_node_ip_address }} -m shell -a hostname -i inventory
      register: validate_hostname
      changed_when: false
      ignore_errors: yes
      tags: TC_013

    - name: Validate the hostname
      assert:
        that: "'localhost' not in validate_hostname.stdout"
        fail_msg: "{{ hostname_fail_msg }}"
        success_msg: "{{ hostname_success_msg }}"
      tags: TC_013

    - name: Delete inventory if exists
      file:
        path: inventory
        state: absent
      tags: TC_013

# OMNIA_DIO_US_NDOD_TC_014
# Execute provison role in management station and PXE boot two compute node
- name: OMNIA_DIO_US_NDOD_TC_014
  hosts: localhost
  connection: local
  gather_subset:
    - 'min'
  vars_files:
    - test_vars/test_provision_vars.yml
    - ../roles/provision/vars/main.yml
  tasks:
    - name: Delete inventory if exists
      file:
        path: inventory
        state: absent
      tags: TC_014

    - name: Create inventory file
      lineinfile:
        path: inventory
        line: "[nodes]"
        create: yes
        mode: '{{ file_permission }}'
      tags: TC_014

    - name: Edit inventory file
      lineinfile:
        path: inventory
        line: "{{ item }} ansible_user=root ansible_password={{ boundary_password }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
      with_items:
        - "{{ groups[cobbler_groupname] }}"
      tags: TC_014

    - meta: refresh_inventory
      tags: TC_014

    - name: Validate ip address is different for both servers
      assert:
        that: groups[cobbler_groupname][0] != groups[cobbler_groupname][1]
        fail_msg: "{{ ip_address_fail_msg }}"
        success_msg: "{{ ip_address_success_msg }}"
      delegate_to: localhost
      run_once: yes
      tags: TC_014

    - name: Check hostname of both servers
      command: ansible nodes -m shell -a hostname -i inventory
      register: node_hostname
      changed_when: false
      ignore_errors: yes
      tags: TC_014

    - name: Validate hostname is different for both servers
      assert:
        that:
          - node_hostname.stdout_lines[1] != node_hostname.stdout_lines[3]
          - "'localhost' not in node_hostname.stdout_lines[1]"
          - "'localhost' not in node_hostname.stdout_lines[3]"
        fail_msg: "{{ hostname_fail_msg }}"
        success_msg: "{{ hostname_success_msg }}"
      delegate_to: localhost
      run_once: yes
      tags: TC_014

    - name: Delete inventory if exists
      file:
        path: inventory
        state: absent
      delegate_to: localhost
      run_once: yes
      tags: TC_014

# OMNIA_DIO_US_NDOD_TC_015
# Validate passwordless ssh connection established or not with compute nodes
- name: OMNIA_DIO_US_NDOD_TC_015
  hosts: localhost
  gather_subset:
    - 'min'
  vars_files:
    - test_vars/test_provision_vars.yml
    - ../roles/provision/vars/main.yml
  tasks:
    - name: Validate authentication of username and password
      command: "ansible {{ cobbler_groupname }} -m ping -i cobbler_inventory"
      register: validate_login
      changed_when: false
      ignore_errors: yes
      tags: TC_015

    - name: Validate the passwordless SSH connection
      assert:
        that:
          - "'pong' in validate_login.stdout"
          - "'SUCCESS' in validate_login.stdout"
          - "'UNREACHABLE' not in validate_login.stdout"
        success_msg: "{{ authentication_success_msg }}"
        fail_msg: "{{ authentication_fail_msg }}"
      tags: TC_015

# OMNIA_DIO_US_NDOD_TC_016
# Execute provison role in management station and reboot compute node after os provision again
- name: OMNIA_DIO_US_NDOD_TC_016
  hosts: localhost
  connection: local
  gather_subset:
    - 'min'
  vars_files:
    - test_vars/test_provision_vars.yml
  tasks:
    - name: Set ip address of the compute node
      set_fact:
        single_node_ip_address: "{{ groups[cobbler_groupname][0] }}"
      tags: TC_016

    - name: Delete inventory if exists
      file:
        path: inventory
        state: absent
      tags: TC_016

    - name: Create inventory file
      lineinfile:
        path: inventory
        line: "[nodes]"
        create: yes
        mode: '{{ file_permission }}'
      tags: TC_016

    - name: Edit inventory file
      lineinfile:
        path: inventory
        line: "{{ single_node_ip_address }} ansible_user=root ansible_password={{ boundary_password }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
      tags: TC_016

    - meta: refresh_inventory
      tags: TC_016

    - name: Reboot servers
      command: ansible nodes -m command -a reboot -i inventory
      ignore_errors: yes
      changed_when: true
      tags: TC_016

    - name: Wait for 10 minutes
      pause:
        minutes: 10
      tags: TC_016

    - name: Check ip address of servers
      command: ansible nodes -m command -a 'ip a' -i inventory
      ignore_errors: yes
      changed_when: false
      register: ip_address_after_reboot
      tags: TC_016

    - name: Validate ip address is same after reboot
      assert:
        that: "'{{ single_node_ip_address }}' in ip_address_after_reboot.stdout"
        fail_msg: "{{ ip_address_fail_msg }}"
        success_msg: "{{ ip_address_success_msg }}"
      tags: TC_016