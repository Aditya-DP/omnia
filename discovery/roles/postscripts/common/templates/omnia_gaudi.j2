#!/bin/bash
################################################################################################################
#  omnia_gaudi:
#      Install Intel Gaudi drivers on all the cluster nodes
#
#################################################################################################################
echo "--------------------------" >> /var/log/xcat/xcat.log
echo "Checking for Intel Gaudi accelerators" >> /var/log/xcat/xcat.log

gaudi_check=`lspci | grep -i "Processing accelerators: Habana Labs Ltd."`

validate_ubuntu_os="$(cat /etc/os-release | grep 'ID=ubuntu' | wc -l)"

HEADER_VER=$(uname -r)

export DEBIAN_FRONTEND=noninteractive

cron_job_for_scale_out_interfaces() {

echo "Set cron job for Gaudi scale out interfaces" >> /var/log/xcat/xcat.log

if [ ! -f /opt/habanalabs/qual/gaudi2/bin/manage_network_ifs.sh ] ; then
  echo "File /opt/habanalabs/qual/gaudi2/bin/manage_network_ifs.sh not found, stop setting." >> /var/log/xcat/xcat.log
  return 1
fi

base_dir="/opt/omnia/cronjobs"

mkdir -p $base_dir

script_to_run="$base_dir/bring_up_ports.sh"

cat <<'EOF' > $script_to_run
#!/bin/bash
/opt/habanalabs/qual/gaudi2/bin/manage_network_ifs.sh --up
RET_CODE=$?
if [ "${RET_CODE}" -eq "1" ]; then
  echo "One or more Gaudi 2 ports are down." >> /dev/stderr
  return 1
fi
EOF

chmod +x $script_to_run

if ! systemctl is-active --quiet cron; then
  echo "Cron service is not active, start and enable cron now." >> /var/log/xcat/xcat.log
  sudo systemctl start cron
  sudo systemctl enable cron
fi

cron_job="@reboot $script_to_run"

temp_crontab=$(mktemp)

crontab -l > $temp_crontab 2>/dev/null

if grep -q "$cron_job" $temp_crontab ; then
  echo "Cron job already configured." >> /var/log/xcat/xcat.log
else
  echo $cron_job >> $temp_crontab
  crontab $temp_crontab
fi

rm $temp_crontab

}

# on node with gaudi
if [[ $gaudi_check == *"Habana Labs Ltd"*  ]]; then

  if [[ $validate_ubuntu_os == "1" ]]; then

    echo "Installing Intel Gaudi drivers" >> /var/log/xcat/xcat.log

    echo "deb [trusted=yes] http://{{ admin_nic_ip }}:80/install{{ repo_store_path }}/cluster/{{ provision_os }}/{{ provision_os_version }}/deb ./" >> /etc/apt/sources.list.d/intelgaudi.list

    sudo apt-get update

    apt install -y cmake \
      curl \
      dkms \
      ethtool \
      gcc \
      iproute2 \
      libbz2-dev \
      libelf-dev \
      libibverbs-dev \
      liblzma-dev \
      librdmacm-dev \
      linux-headers-${HEADER_VER} \
      linux-modules-extra-${HEADER_VER} \
      lsof \
      moreutils \
      numactl \
      unzip \
      wget

    apt install -y habanalabs-container-runtime \
      habanalabs-dkms \
      habanalabs-firmware \
      habanalabs-firmware-tools \
      habanalabs-graph \
      habanalabs-qual \
      habanalabs-rdma-core \
      habanalabs-thunk \
      habanatools

    # This number was defined by Habana team and is the number used in IDC clusters
    echo "vm.nr_hugepages=156300" > /etc/sysctl.d/90-gaudi.conf

    rm /etc/apt/sources.list.d/intelgaudi.list

    apt-get update

    # make sure Gaudi scale out interfaces are up after rebooting
    cron_job_for_scale_out_interfaces

    echo "Intel Gaudi drivers installation completed" >> /var/log/xcat/xcat.log

  fi

fi
echo "-----------------------------" >> /var/log/xcat/xcat.log
