# Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Validating for Nodes having GPU

- name: Validating Accelarator
  hosts: switch_node
  tasks:
    - name: Validate Accelerator
      block:
        - name: Set credentials and variables
          ansible.builtin.set_fact:
            username: "{{ username }}"
            password: "{{ password }}"
            filtered_dict: {}
          no_log: true

        - name: Authenticate
          block:
            - name: Authenticate to switch- "{{ ethernet_ip.stdout }}"
              ansible.builtin.uri:
                url: http://{{ ethernet_ip.stdout }}/admin/launch?script=rh&template=login&action=login
                method: POST
                body_format: form-urlencoded
                body:
                  f_user_id: "{{ username }}"
                  f_password: "{{ password }}"
                  enter: Sign in
                status_code: 302
              register: login
              no_log: true
              tags: TC_001, TC_002

            - name: Verify authentication status
              ansible.builtin.fail:
                msg: "Authentication failed"
              when: login.set_cookie is undefined
              tags: TC_001, TC_0023

        - name: Get Ports
          ansible.builtin.command: show ports
          register: ports_in_switch
          changed_when: false
          tags: TC_001, TC_002

        - name: Create a list of user specified ports to be splitted
          ansible.builtin.command: python3 test.py [ethernet_split_ports]
          register: ethernet_ports_list
          changed_when: false
          tags: TC_001, TC_002

        - name: Add required changes for user input
          ansible.builtin.set_fact:
            ethernet_port_name: "{{ '1/' + item }}"
          with_items: "{{ ethernet_ports_list }}"
          tags: TC_001, TC_002

        - name: Debug
          ansible.builtin.debug:
            msg: "{{ ethernet_port_name }}"
          tags: TC_001, TC_002

    - name: Changes for splitted port
      block:
        - name: Append port with '/1'
          vars:
            splitted_port: []
          ansible.builtin.set_fact:
            splitted_port: "{{ splitted_port + [ethernet_port_name + '/1'] }}"
          with_items: "{{ ethernet_port_name }}"

        - name: Debug
          ansible.builtin.debug:
            msg: "{{ splitted_port }}"

        - name: Append port with '/2'
          vars:
            splitted_port: []
          ansible.builtin.set_fact:
            splitted_port: "{{ splitted_port + [ethernet_port_name + '/2'] }}"
          with_items: "{{ ethernet_port_name }}"

        - name: Debug
          ansible.builtin.debug:
            msg: "{{ splitted_port }}"

    - name: Validate for ports splitted (ethernet_port_name)
      ansible.builtin.assert:
        that:
          - "splitted_port.item in ports_in_switch.stdout"
        success_msg: "{{ port_pass }}"
        fail_msg: "{{ port_fail }}"
      tags: TC_001, TC_002