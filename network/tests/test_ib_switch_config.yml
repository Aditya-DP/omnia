# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Verify inifiniband inventory being created and execute infiniband.yml
- name: OMNIA_1.4_IB_SWITCH_CONFIG_TC_001
  hosts: localhost
  connection: local
  vars:
   username: "{{ ib_username }}"
   password: "{{ ib_password }}"

  vars_files:
   - test_vars/test_ib_switch_config_vars.yml
   - ../infiniband_hdr_input.yml

  tasks:
   - name: Check if infiniband inventory present at the inventory path.
     ansible.legacy.shell: cat {{ infiniband_inventory_file }}
     register: infiniband_ip
     failed_when: false
     changed_when: false
     tags: TC_001

   - name: Execute infiniband playbook
     ansible.legacy.shell: "ansible-playbook infiniband_switch_config.yml -i {{ infiniband_inventory_path }} -e ib_username= "{{ ib_username }}" -e ib_password="{{ ib_password }}" -e ib_admin_password="{{ ib_admin_pass }}" -e ib_monitor_password="{{ ib_monitor_pass}}" "
     changed_when: false
     tags: TC_001

# Test case to validate IB Switch Port Split
- name: OMNIA_1.4_IB_SWITCH_CONFIG_TC_002
  hosts: localhost
  vars_files:
   - test_vars/test_ib_switch_config_vars.yml
    - ../input_params/ib_vars.yml

  tasks:
   - name: Assign credentials and variables
     ansible.builtin.set_fact:
      username: "{{ username }}"
      password: "{{ password }}"
      filtered_dict: {}
     no_log: true

   - name: Authenticate
     block:
      - name: Authenticate to switch
        ansible.builtin.uri:
         url: http://{{ infiniband_ip.stdout }}/admin/launch?script=rh&template=login&action=login
         method: POST
         body_format: form-urlencoded
         body:
          f_user_id: "{{ username }}"
          f_password: "{{ password }}"
          enter: Sign in
         status_code: 302
        register: login
        no_log: true
        tags: TC_002

      - name: Check authentication status
        ansible.builtin.fail:
         msg: "Authentication failed"
        when: login.set_cookie is undefined
        tags: TC_002

   - name: Get switch config from ib
     ansible.builtin.uri:
      url: http://{{ infiniband_ip.stdout }}/admin/launch?script=json
      method: POST
      body_format: json
      headers:
       Cookie: "{{ login.set_cookie.split(';')[0] }}"
      body:
       {
        "ansible.legacy.shells":
         [
          "show interfaces ib status"
         ]
       }
      return_content: true
     register: status
     tags: switch_config, TC_002

   - name: Print registered o/p
     ansible.builtin.debug:
      msg: "{{ status }}"
     tags: switch_config, TC_002

   - name: Creating a list of user specified ports to be splitted
     ansible.legacy.shell: python3 test_ib_switch_config.py [ib_split_ports]
     register: ib_ports_list
     tags: TC_002

   - name: Add required changes for user input
     ansible.builtin.set_fact:
      ib_port_name: "{{ '1/' + item }}"
     with_items: "{{ ib_ports_list }}"
     tags: TC_002

   - name: Debug
     ansible.builtin.debug:
      msg: "{{ ib_port_name }}"
     tags: TC_002

   - name: Changes for splitted port
     block:
      - name: Append port with '/1'
        vars:
         splitted_port: []
        ansible.builtin.set_fact:
         splitted_port: "{{ splitted_port + [ib_port_name + '/1'] }}"
        with_items: "{{ ib_port_name }}"
        tags: TC_002

      - name: Append port with '/2'
        vars:
         splitted_port: []
        ansible.builtin.set_fact:
         splitted_port: "{{ splitted_port + [ib_port_name + '/2'] }}"
        with_items: "{{ ib_port_name }}"
        tags: TC_002

   - name: Validate for ports splitted
     ansible.builtin.assert:
      that:
       - " splitted_port.item in status.stdout "
      success_msg: "{{ split_success_message }}"
      fail_msg: "{{ split_fail_message }}"
     tags: TC_002