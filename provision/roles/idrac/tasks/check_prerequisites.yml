# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Install ansible-galaxy modules
  ansible.builtin.command: ansible-galaxy collection install {{ item }}
  changed_when: true
  with_items: "{{ idrac_collections }}"
  run_once: true

- name: Install omsdk using pip3.6
  ansible.builtin.command: pip3.6 install "{{ omsdk_package }}"
  changed_when: true
  failed_when: false
  run_once: true

- name: Install omsdk using pip
  ansible.builtin.pip:
    name: "{{ omsdk_package }}"
    state: present
  run_once: true

- name: Initialize variables
  ansible.builtin.set_fact:
    raid_type: false
    raid_vd_status: false
    non_raid_disk_status: false
    raid_controller_sensor: ""
    raid_enclosure_name: ""
    boss_type: false
    boss_vd_status: false
    boss_controller_sensor: ""
    drives_id: ""
    provision_status: false
    model_status: false
    idrac_license_name: ""
    deploy_os_status: false

- name: Check if provisioned_idrac_inventory file exists
  ansible.builtin.stat:
    path: "{{ provisioned_idrac_inventory_path }}"
  register: provisioned_idrac_check
  run_once: true

- name: Check the provisioned_idrac_inventory output
  ansible.builtin.command: cat {{ provisioned_idrac_inventory_path }}
  changed_when: false
  register: provisioned_idrac_list
  run_once: true
  when: provisioned_idrac_check.stat.exists

- name: Set provision status - CLI
  ansible.builtin.set_fact:
    provision_status: true
  when:
    - provisioned_idrac_check.stat.exists
    - inventory_hostname in provisioned_idrac_list.stdout

- name: Removing hosts already provisioned - CLI
  ansible.builtin.debug:
    msg: "{{ provision_skip_msg_cli }}"
  when: provision_status

- name: Check status of server
  block:
    - name: Show status of the Lifecycle Controller
      dellemc.openmanage.idrac_lifecycle_controller_status_info:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
      register: lc_check_status

    - name: LC not available
      ansible.builtin.fail:
        msg: "{{ lc_check_fail_msg }}"
      when: not lc_check_status.lc_status_info.LCReady
      register: lc_fail

    - name: Get system inventory
      dellemc.openmanage.idrac_system_info:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
      register: idrac_info

    - name: Firmware version of iDRAC9 not supported
      ansible.builtin.debug:
        msg: "{{ idrac9_firmware_not_supported_msg }}"
      when:
        - '"iDRAC9" in idrac_license_name'
        - idrac_info.system_info.iDRAC[0].FirmwareVersion < idrac9_supported_version

    - name: Firmware version of iDRAC8 not supported
      ansible.builtin.debug:
        msg: "{{ idrac8_firmware_not_supported_msg }}"
      when:
        - '"iDRAC8" in idrac_license_name'
        - idrac_info.system_info.iDRAC[0].FirmwareVersion < idrac8_supported_version
  when: not provision_status
