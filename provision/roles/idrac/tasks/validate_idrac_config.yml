# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Validate all extra parameters are provided
  block:
    - name: Validate all extra parameters are provided
      ansible.builtin.assert:
        that:
          - idrac_username | length > 1
          - idrac_password | length > 1
          - provision_os | length > 1
      no_log: true
  rescue:
    - name: Missing mandatory input parameters
      ansible.builtin.fail:
        msg: "{{ missing_idrac_input_fail_msg }}"

- name: Validate provision_os
  ansible.builtin.fail:
    msg: "{{ provision_os_fail_msg }}"
  when:
    - os_supported_rhel not in provision_os
    - os_supported_rocky not in provision_os

- name: Include variable file idrac_vars.yml
  ansible.builtin.include_vars: "{{ idrac_input_filename }}"
  run_once: true

- name: Initialize variables
  ansible.builtin.set_fact:
    snmp_trap_status: false
    provision_status: false
  run_once: true

- name: Validate input parameters are not empty
  ansible.builtin.fail:
    msg: "{{ idrac_input_fail_msg }}"
  register: idrac_config_check
  when:
    - idrac_system_profile | length < 1

- name: Assert idrac_system_profile value
  ansible.builtin.assert:
    that:
      - idrac_system_profile == "Performance" or idrac_system_profile == "PerformancePerWatt(DAPC)" or idrac_system_profile == "PerformancePerWatt(OS)" or idrac_system_profile == "WorkstationPerformance"
    success_msg: "{{ idrac_system_profile_success_msg }}"
    fail_msg: "{{ idrac_system_profile_fail_msg }}"

- name: Assert snmp_community_name value
  ansible.builtin.assert:
    that:
      - snmp_community_name | length > 1
    success_msg: "{{ snmp_community_success_msg }}"
    fail_msg: "{{ snmp_community_fail_msg }}"

- name: Set snmp trap destination status
  ansible.builtin.set_fact:
    snmp_trap_status: true
  when: snmp_trap_destination | length > 1
  run_once: true

- name: Assert snmp_trap_destination value
  ansible.builtin.assert:
    that:
      - snmp_trap_destination | length > 6
    success_msg: "{{ snmp_trap_dest_success_msg }}"
    fail_msg: "{{ snmp_trap_dest_fail_msg }}"
  when: snmp_trap_status
