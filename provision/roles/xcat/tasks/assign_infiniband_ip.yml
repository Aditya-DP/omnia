# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Assign infiniband_ip
  block:
    - name: Check for mapping file existence
      ansible.builtin.stat:
        path: "{{ mapping_file_dest }}"
      delegate_to: localhost
      register: mapping_status

    - name: Check for provision file existence
      ansible.builtin.stat:
        path: "{{ provision_file_dest }}"
      register: provision_status
      delegate_to: localhost

    - name: Fail if provision file doesn't exists
      ansible.builtin.fail:
        msg: "{{ provision_file_msg }}"
      when: not provision_status.stat.exists

    - name: Save roce_enabled status
      ansible.builtin.set_fact:
        roce_enabled: "{{ lookup('ini', 'roce_enabled section=provision file={{ provision_file_dest }}') }}"

    - name: Execute tasks for assigning Infiniband IP
      block:
        - name: Initialize variables
          ansible.builtin.set_fact:
            nics_avail: []
            ib_nics: []

        - name: Check for nics
          ansible.builtin.shell: ls /etc/sysconfig/network-scripts/ | grep "ifcfg-"
          register: nics_status
          changed_when: false

        - name: Fetch available nics
          ansible.builtin.set_fact:
            nics_avail: "{{ nics_avail + [item.split('-')[1]] }}"
          with_items: "{{ nics_status.stdout_lines }}"
          when: "'ifcfg-ib' in item"

        - name: Fetch IB nics
          ansible.builtin.include_tasks: fetch_ib_nics.yml
          with_items: "{{ nics_avail }}"

        - name: Fetch record from mapping file
          ansible.builtin.shell: >
            set -o pipefail && \
            cat "{{ mapping_file_dest }}" | grep "{{ inventory_hostname }}"
          register: status
          changed_when: false
          delegate_to: localhost

        - name: Fetch ib_ip from mapping file
          ansible.builtin.set_fact:
            infiniband_ip: "{{ status.stdout.split(',')[1] }}"

        - name: Assign IP to infiniband nic
          community.general.nmcli:
            type: infiniband
            conn_name: '{{ ib_nics[0] }}'
            ip4: '{{ infiniband_ip }}/16'
            method4: manual
            state: present
          when: ib_nics | length > 0

        - name: Reactivate ib nic to up
          ansible.builtin.command: nmcli connection up {{ ib_nics[0] }}
          changed_when: false
          when: ib_nics | length > 0
      when:
        - not roce_enabled
        - mapping_status.stat.exists
  when: hostvars['localhost']['empty_ib_ip'] | int == 0

- name: Delete mapping file
  ansible.builtin.file:
    path: "{{ mapping_file_dest }}"
    state: absent
  delegate_to: localhost
