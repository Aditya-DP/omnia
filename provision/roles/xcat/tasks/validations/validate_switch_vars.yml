# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Set facts to validate snmp support
  ansible.builtin.set_fact:
    pxe_mapping_file: false
    switch_ip_pxe: false
  tags: init

# Check status of mapping file
- name: Set the mapping file value for host network
  ansible.builtin.set_fact:
    pxe_mapping_file: true
  when:
    - pxe_mapping_file_path | length > 0
    - '"/" in pxe_mapping_file_path'
  tags: init

- name: Validate PXE mapping file
  ansible.builtin.include_tasks: validate_mapping_file.yml
  when: pxe_mapping_file

- name: Warning - both mapping file and switch ip is provided
  ansible.builtin.debug:
    msg: "{{ provision_option_fail_msg }}"
  when:
    - pxe_mapping_file
    - pxe_switch_ip | length > 1

# Assert the Switch details provided in case PXE mapping file not present
- name: Validate switch details exist if pxe mapping file not present
  block:
    - name: Validate if input params of provision config are not empty
      ansible.builtin.fail:
        msg: "{{ fail_switch_or_mapping_file }}"
      register: input_provision_check
      tags: validate
      when:
        - pxe_switch_ip | length < 1 or
          pxe_switch_snmp_community_string | length < 1 or
          node_name | length < 1

    - name: Valid pxe switch ip is given
      ansible.builtin.assert:
        that: pxe_switch_ip | ansible.utils.ipv4
        success_msg: "{{ pxe_switch_ip_valid }}"
        fail_msg: "{{ pxe_switch_ip_invalid }}"

    - name: Test using ping
      ansible.builtin.command: ping -c 1 {{ pxe_switch_ip }}
      register: ping_switch
      ignore_errors: true
      changed_when: false

    - name: Check if switch is reachable or not
      ansible.builtin.fail:
        msg: "{{ pxe_switch_unreachable }}"
      when: ping_search_key in ping_switch.stdout

    - name: Set fact for switch ip
      ansible.builtin.set_fact:
        switch_ip_pxe: true
  when: not pxe_mapping_file
  tags: init
