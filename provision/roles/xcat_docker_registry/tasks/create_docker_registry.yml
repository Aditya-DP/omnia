# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Add docker community edition repository
  ansible.builtin.get_url:
    url: "{{ docker_repo_url }}"
    dest: "{{ docker_repo_dest }}"
    mode: "{{ file_permission }}"
  register: docker_repo
  until: docker_repo is not failed
  retries: "{{ max_retries }}"
  delay: "{{ max_delay }}"

- name: Disable docker-ce-stable
  ansible.builtin.command: dnf config-manager --set-disabled docker-ce-stable
  changed_when: true
  failed_when: false

- name: Create containerd rpm directory
  ansible.builtin.file:
    path: "{{ containerd_rpm_dir }}"
    state: directory
    mode: "{{ file_permission }}"

- name: Download containerd
  ansible.builtin.get_url:
    url: "{{ containerd_rpm_url }}"
    dest: "{{ containerd_rpm_dest }}"
    mode: "{{ file_permission }}"
  register: containerd_rpm
  until: containerd_rpm is not failed
  retries: "{{ max_retries }}"
  delay: "{{ max_delay }}"

- name: Install containerd
  ansible.builtin.command: rpm --install --nodeps --replacefiles --excludepath=/usr/bin/runc {{ containerd_rpm_dest }} # noqa: command-instead-of-module
  changed_when: true
  failed_when: false

- name: Enable docker-ce-stable
  ansible.builtin.command: dnf config-manager --enable docker-ce-stable
  changed_when: true

- name: Install docker packages
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: present

- name: Start and enable docker service
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true
  register: start_docker
  until: start_docker is not failed
  retries: "{{ max_retries }}"
  delay: "{{ max_delay }}"

- name: Fetch control plane hostname
  ansible.builtin.command: hostname
  changed_when: false
  register: fetch_hostname

- name: Set cp_hostname
  ansible.builtin.set_fact:
    cp_hostname: "{{ fetch_hostname.stdout }}"

- name: Create docker-registry and docker certs folder
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ directory_permissions }}"
  with_items:
    - "{{ docker_registry_certs_folder }}"
    - "{{ docker_certs_folder }}"

- name: Copy certs
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
  with_items: "{{ certs_path }}"

- name: Copy docker-registry files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
  with_items: "{{ docker_registry_path }}"

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable docker-registry service
  block:
    - name: Start and enable docker-registry service
      ansible.builtin.systemd:
        name: docker-registry
        state: started
        enabled: true
  rescue:
    - name: Failed to start docker-registry service
      ansible.builtin.debug:
        msg: "{{ docker_registry_enable_fail_msg }}"
