# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Check Kubernetes is deployed on cluster
- name: Verify Kubernetes is deployed on cluster
  ansible.builtin.command: kubectl get node
  register: k8s_return_code
  changed_when: false
  failed_when: false

- name: Fail if Kubernetes is not deployed
  ansible.builtin.assert:
    that:
      - k8s_return_code.rc == 0
    fail_msg: "{{ k8s_not_deployed }}"

# Check helm is deployed on cluster
- name: Verify helm is deployed on cluster
  ansible.builtin.command: helm
  register: helm_return_code
  changed_when: false
  failed_when: false

- name: Fail if helm is not deployed
  ansible.builtin.assert:
    that:
      - helm_return_code.rc == 0
    fail_msg: "{{ helm_not_deployed }}"

- name: Remove /opt/omnia/csi-driver-powerscale directory if alreday present
  ansible.builtin.file:
    path: "{{ csi_powerscale_path }}"
    state: absent

- name: Create csi-driver-powerscale directory under /opt/omnia
  ansible.builtin.file:
    path: "{{ csi_powerscale_path }}"
    mode: "{{ permission_644 }}"
    state: directory
    owner: "{{ owner_value }}"
    group: "{{ group_value }}"

- name: Check if secret file is encrypted
  ansible.builtin.command: cat "{{ hostvars['localhost']['csi_powerscale_driver_secret_file_path'] }}"
  changed_when: false
  register: config_content
  delegate_to: 127.0.0.1

- name: Decrpyt secret file
  ansible.builtin.command: >-
    ansible-vault decrypt {{ hostvars['localhost']['csi_powerscale_driver_secret_file_path'] }}
    --vault-password-file {{ role_path }}/files/{{ csi_powerscale_secret_vaultname }}
  when: "'$ANSIBLE_VAULT;' in config_content.stdout"
  changed_when: true
  delegate_to: 127.0.0.1

# Copy secret file to /opt/omnia
- name: Copy secret file
  ansible.builtin.copy:
    src: "{{ hostvars['localhost']['csi_powerscale_driver_secret_file_path'] }}"
    dest: "{{ csi_powerscale_secret_path }}"
    owner: "{{ owner_value }}"
    group: "{{ group_value }}"
    mode: "{{ permission_644 }}"

- name: Encrypt secret file
  ansible.builtin.command: >-
    ansible-vault encrypt {{ hostvars['localhost']['csi_powerscale_driver_secret_file_path'] }}
    --vault-password-file {{ role_path }}/files/{{ csi_powerscale_secret_vaultname }}
  changed_when: false
  delegate_to: 127.0.0.1

# Copy values file to /opt/omnia
- name: Copy values file
  ansible.builtin.copy:
    src: "{{ hostvars['localhost']['csi_powerscale_driver_values_file_path'] }}"
    dest: "{{ csi_powerscale_values_path }}"
    owner: "{{ owner_value }}"
    group: "{{ group_value }}"
    mode: "{{ permission_644 }}"

- name: Get dependencies from local repo
  block:
    - name: Get csi-powerscale git tar
      ansible.builtin.get_url:
        url: "{{ offline_git_path }}/{{ csi_powerscale_git }}"
        dest: "{{ csi_powerscale_path }}/{{ csi_powerscale_git }}"
        mode: "{{ permission_644 }}"

    - name: Extract csi-powerscale tar file
      ansible.builtin.unarchive:
        src: "{{ csi_powerscale_path }}/{{ csi_powerscale_git }}"
        dest: "{{ csi_powerscale_path }}"
        remote_src: yes

    - name: Get dell/helm-charts git tar
      ansible.builtin.get_url:
        url: "{{ offline_git_path }}/{{ helm_charts_git }}"
        dest: "{{ csi_powerscale_path }}/csi-powerscale/{{ helm_charts_git }}"
        mode: "{{ permission_644 }}"

    - name: Get external-snapshotter git tar
      ansible.builtin.get_url:
        url: "{{ offline_git_path }}/{{ external_snapshotter_git }}"
        dest: "{{ csi_powerscale_path }}/csi-powerscale/{{ external_snapshotter_git }}"
        mode: "{{ permission_644 }}"
  rescue:
    - name: Handle dependency failure
      ansible.builtin.fail:
        msg: "{{ fail_msg_download }}"

- name: Extract dell/helm-charts tar file under csi-powerscale directory
  ansible.builtin.unarchive:
    src: "{{ csi_powerscale_path }}/csi-powerscale/{{ helm_charts_git }}"
    dest: "{{ csi_powerscale_path }}/csi-powerscale"
    remote_src: yes

- name: Extract dell/helm-charts tar file under csi-powerscale directory
  ansible.builtin.unarchive:
    src: "{{ csi_powerscale_path }}/csi-powerscale/{{ external_snapshotter_git }}"
    dest: "{{ csi_powerscale_path }}/csi-powerscale"
    remote_src: yes

- name: Create isilon namespace
  ansible.builtin.command:
    cmd: "kubectl create ns isilon"
  register: command_result
  failed_when: false
  changed_when: command_result.changed
