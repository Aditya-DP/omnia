# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Validate ldap parameters
  ansible.builtin.fail:
    msg: "{{ ldap_client_config_failure_msg }}"
  when:
    - ( domain_name | default("", true) |  length < 1 or

- name: Validate LDAP Connection type
  ansible.builtin.assert:
    that:
      - ldap_connection_type == 'TLS' or
        ldap_connection_type == 'SSL' or
        ldap_connection_type == 'tls' or
        ldap_connection_type == 'ssl'
    success_msg: "{{ ldap_connection_type_success_msg }}"
    fail_msg: "{{ ldap_connection_type_fail_msg }}"

- name: Validate cert path when connection type is TLS
  block:
    - name: Verify the certificate path when connection type is TLS
      ansible.builtin.stat:
        path: "{{ ldap_ca_cert_path }}"
      register: stat_results

    - name: Validate the certificate existence
      ansible.builtin.fail:
        msg: "{{ ldap_ca_cert_path_failure_msg }}"
      when: not stat_results.stat.exists
  when:
    - ldap_connection_type == 'TLS' or
      ldap_connection_type == 'tls'

- name: Assert openldap_config_root_password
  ansible.builtin.assert:
    that:
      - openldap_config_root_password | length > min_length | int - 1
      - openldap_config_root_password | length < max_length | int + 1
      - '"-" not in openldap_config_root_password '
      - '"\\" not in openldap_config_root_password '
      - '"\"" not in openldap_config_root_password '
      - " \"'\" not in openldap_config_root_password "
    success_msg: "{{ success_msg_config_root_password }}"
    fail_msg: "{{ fail_msg_config_root_password }}"

- name: Assert openldap_database_root_password
  ansible.builtin.assert:
    that:
      - openldap_database_root_password | length > min_length | int - 1
      - openldap_database_root_password | length < max_length | int + 1
      - '"-" not in openldap_database_root_password '
      - '"\\" not in openldap_database_root_password '
      - '"\"" not in openldap_database_root_password '
      - " \"'\" not in openldap_database_root_password "
    success_msg: "{{ success_msg_database_root_password }}"
    fail_msg: "{{ fail_msg_database_root_password }}"

- name: Assert openldap_monitor_root_password
  ansible.builtin.assert:
    that:
      - openldap_monitor_root_password | length > min_length | int - 1
      - openldap_monitor_root_password | length < max_length | int + 1
      - '"-" not in openldap_monitor_root_password '
      - '"\\" not in openldap_monitor_root_password '
      - '"\"" not in openldap_monitor_root_password '
      - " \"'\" not in openldap_monitor_root_password "
    success_msg: "{{ success_msg_monitor_root_password }}"
    fail_msg: "{{ fail_msg_monitor_root_password }}"

- name: Validate Certificate directory
  when: TLS_Cetificates_directory_path != ''
  block:
  - name: Check TLS certificate directory exists
    ansible.builtin.stat:
      path: "{{ TLS_Cetificates_directory_path }}"
      register: tls_directory

  - name: Fail if TLS certificate directory not exists
    ansible.builtin.fail:
      msg: "{{ ldap_cert_path_fail_msg }}"
    when: not tls_directory.stat.exists