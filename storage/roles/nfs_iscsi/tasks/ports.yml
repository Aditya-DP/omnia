# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Include Powervault variables
  ansible.builtin.include_vars: "{{ role_path }}/../../control_plane/input_params/powervault_vars.yml"

- name: Set powervault username and password
  ansible.builtin.set_fact:
    powervault_username: "{{ hostvars['127.0.0.1']['powervault_username'] }}"
    powervault_password: "{{ hostvars['127.0.0.1']['powervault_password'] }}"
    powervault_ip: "{{ hostvars['127.0.0.1']['powervault_ip'] }}"
  no_log: true

- name: Get auth string
  ansible.builtin.shell: >
          set -o pipefail && \
          echo -n {{ powervault_username }}_{{ powervault_password }}  | sha256sum
  register: auth_string
  changed_when: false
  delegate_to: localhost

- name: Get auth string
  ansible.builtin.shell: echo -n {{ powervault_username }}_{{ powervault_password }}  | sha256sum
  register: port_auth_string
  changed_when: false
  delegate_to: localhost
  no_log: true
  ignore_errors: true

- name: Get session key
  ansible.builtin.uri:
    url: https://{{ powervault_ip }}/api/login/{{ port_auth_string.stdout | replace(" -", "") }}
    method: GET
    headers:
      {'datatype': 'json'}
    validate_certs: false
  register: port_session_key
  delegate_to: localhost

- name: Execute show system command
  ansible.builtin.uri:
    url: https://{{ powervault_ip }}/api/show/system
    method: GET
    body_format: json
    validate_certs: false
    use_proxy: false
    timeout: 60
    headers:
      {'sessionKey': "{{ port_session_key.json.status[0].response }}", 'datatype':'json'}
  register: system_info

- name: Get the product id
  ansible.builtin.set_fact:
    pv_id: "{{ system_info.json.system[0]['product-id'] }}"

- name: Verify the product id and model no. of device
  ansible.builtin.assert:
    that: ("ME4" in pv_id)
    fail_msg: "{{ fail_iscsi_support }}"

- name: Show ports
  ansible.builtin.uri:
    url: https://{{ powervault_ip }}/api/show/ports
    method: GET
    body_format: json
    validate_certs: false
    use_proxy: false
    headers:
      {'sessionKey': "{{ port_session_key.json.status[0].response }}", 'datatype':'json'}
  register: show_ports
  delegate_to: localhost

- name: Up ports
  ansible.builtin.set_fact:
    up_port: "{{ up_port + [item.port] }}"
    target_id: "{{ item.get('target-id') }}"
  when: item.status == "Up"
  loop: "{{ show_ports.json.port }}"
  loop_control:
    label: "{{ item.port }}"

- name: Set ip
  ansible.builtin.set_fact:
    set_port_ip: "{{ set_port_ip + ['{{ port_ip }}{{ temp | int }}'] }}"
    temp: "{{ temp | int + t | int }}"
  loop: "{{ up_port }}"

- name: Assign ip to ports
  ansible.builtin.uri:
    url: https://{{ powervault_ip }}/api/set/host-parameters/gateway/{{ port_gateway }}/ip/{{ item.0 }}/netmask/{{ port_netmask }}/ports/{{ item.1 }}/prompt/yes/noprompt # noqa: yaml[line-length]
    method: GET
    body_format: json
    validate_certs: false
    use_proxy: false
    headers:
      {'sessionKey': "{{ port_session_key.json.status[0].response }}", 'datatype':'json'}
  register: set_ports
  with_together:
    - "{{ set_port_ip }}"
    - "{{ up_port }}"
  delegate_to: localhost
