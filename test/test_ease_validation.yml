# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Verify the hostname should have domain name for all the nodes.

- name: OMNIA_1.4.1_Ease_Provision_TC_001
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate Domain Name
      block:
        - name: Getting the Hostname
          ansible.builtin.command: hostnamectl
          register: hostname
          changed_when: false
          tags: TC_001

        - name: Checking the domain name
          ansible.builtin.assert:
            that:
              - "{{ domain_name }} in hostname"
            success_msg: "{{ domain_pass }}"
            fail_msg: "{{ domain_fail }}"

# Verify IB and BMC IP assinged to all the nodes.

- name: OMNIA_1.4.1_Ease_Provision_TC_002
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate IB IPs
      block:

        - name: Get the DB details
          postgresql_query:
            db: "{{ omnia_db }}"
            login_user: "{{ postgres_user }}"
            login_password: "{{ postgres_password }}"
            query: select distinct bmc_ip from cluster.nodeinfo;
          register: bmc_details
          changed_when: false
          tags: TC_002

        - name: Checking the BMC Nic
          ansible.builtin.command: "{{ item â€‹}}"
	        with_items:
            - {{ bmc_details.stdout_lines }}
          ansible.builtin.assert:
            that:
              - "{{ BMC_IP }} in item"
            success_msg: "{{ bmc_pass }}"
            fail_msg: "{{ bmc_fail }}"

# Validate CUDA toolkit is installed on all the inventory nodes.

- name: OMNIA_1.4.1_Ease_Provision_TC_003
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate CUDA
      block:
        - name: Getting the CUDA version
          ansible.builtin.command: nvcc --version
          register: cuda_installed_version
          changed_when: false
          tags: TC_003

        - name: Checking the CUDA Version
          ansible.builtin.assert:
            that:
              - "{{ CUDA_Default_version }} in cuda_installed_version"
            success_msg: "{{ CUDA_install_pass }}"
            fail_msg: "{{ CUDA_install_fail }}"

# Validate for OFED installation on all the inventory nodes.

- name: OMNIA_1.4.1_Ease_Provision_TC_004
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate OFED
      block:
        - name: Getting the OFED info
          ansible.builtin.command: ofed_info | grep MLNX_OFED
          register: ofed_installed_version
          changed_when: false
          tags: TC_005

        - name: Checking the OFED installation
          ansible.builtin.assert:
            that:
              - "{{ MLNX_OFED_version }} in ofed_installed_version"
            success_msg: "{{ OFED_install_pass }}"
            fail_msg: "{{ OFED_install_fail }}"

# Validate CUDA is not installed as toolkit path is empty or invalid

- name: OMNIA_1.4.1_Ease_Provision_TC_005
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate CUDA
      block:
        - name: Getting the CUDA version
          ansible.builtin.command: nvcc --version
          register: cuda_not_installed_version
          changed_when: false
          tags: TC_005, TC_006, TC_007, TC_008

        - name: Checking the CUDA installation
          ansible.builtin.assert:
            that:
              - "{{ CUDA_Default_version }} not in cuda_not_installed_version"
            success_msg: "{{ CUDA_not_install_pass }}"
            fail_msg: "{{ CUDA_not_install_fail }}"

# Validate OFED is not installed as toolkit path is empty or invalid

- name: OMNIA_1.4.1_Ease_Provision_TC_006
  hosts: all
  vars_files:
    - 'test_vars/test_ease_vars.yml'

  tasks:
    - name: Validate OFED
      block:
        - name: Getting the OFED info
          ansible.builtin.command: ofed_info | grep MLNX_OFED
          register: ofed_not_installed_version
          changed_when: false
          tags: TC_009, TC_010, TC_011, TC_012

        - name: Checking the OFED installation
          ansible.builtin.assert:
            that:
              - "{{ MLNX_OFED_version }} not in ofed_not_installed_version"
            success_msg: "{{ OFED_not_install_pass }}"
            fail_msg: "{{ OFED_not_install_fail }}"
