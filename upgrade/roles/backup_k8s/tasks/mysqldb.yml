# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Get MySQL Pod Name
  ansible.builtin.command: kubectl get pod -n "{{ telemetry_namespace }}" -l app="mysqldb" -o jsonpath='{.items[0].metadata.name}'
  register: mysql_pod_name
  changed_when: false

- name: Check if MySQL Pod Exists
  ansible.builtin.command: kubectl get pod "{{ mysql_pod_name.stdout }}" -n "{{ telemetry_namespace }}" --no-headers
  register: pod_check
  changed_when: false
  ignore_errors: true
  no_log: true

- name: Fail if MySQL Pod Does Not Exist
  ansible.builtin.fail:
    msg: "Pod '{{ mysql_pod_name }}' does not exist in namespace '{{ telemetry_namespace }}'"
  when: pod_check.rc != 0

- name: Get MySQL pod status
  ansible.builtin.command: kubectl get pod  -n "{{ telemetry_namespace }}" "{{ mysql_pod_name.stdout }}" -o jsonpath='{.status.phase}'
  register: pod_status
  when: pod_check.rc == 0
  failed_when: false
  changed_when: false

- name: Fail if MySQL Pod is Not Running
  ansible.builtin.fail:
    msg: "Pod '{{ mysql_pod_name.stdout }}' is not running. Current status: {{ pod_status.stdout }}"
  when: pod_status.stdout != 'Running'

- name: Backup for MYSQL Database
  block:
    - name: Backup MySQL Database
      ansible.builtin.command:
        kubectl exec -n {{ telemetry_namespace }} {{ mysql_pod_name.stdout }} -- sh -c 'mysqldump -u {{ mysqldb_user }} -p"{{ mysqldb_password }}" {{ mysqldb_name }} > /tmp/{{ mysql_telemetry_db_backup_file }}' # noqa: yaml[line-length]
      register: backup_result
      changed_when: false
      no_log: true

    - name: Check if mysqldb backup was Successful
      ansible.builtin.fail:
        msg: "Mysqldb backup failed: {{ backup_result.stderr }}"
      when: backup_result.rc != 0

    - name: Copy backup file from pod to "{{ k8s_backup_location }}"
      ansible.builtin.command: kubectl cp "{{ telemetry_namespace }}"/{{ mysql_pod_name.stdout }}:"/tmp/{{ mysql_telemetry_db_backup_file }}" "{{ k8s_backup_location }}/{{ mysqldb_local_backup_file }}" # noqa: yaml[line-length]
      changed_when: false
